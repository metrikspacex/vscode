{
  "[c]": {
    "editor.defaultFormatter": "xaver.clang-format",
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.inlineSuggest.suppressSuggestions": false,
    "editor.maxTokenizationLineLength": 2500,
    "editor.rulers": [
      80
    ],
    "editor.semanticHighlighting.enabled": true,
    "editor.suggest.insertMode": "replace",
    "editor.tabSize": 2,
    "editor.wordBasedSuggestions": false,
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  "[cpp]": {
    "editor.defaultFormatter": "xaver.clang-format",
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.inlineSuggest.suppressSuggestions": false,
    "editor.maxTokenizationLineLength": 2500,
    "editor.rulers": [
      80
    ],
    "editor.semanticHighlighting.enabled": true,
    "editor.suggest.insertMode": "replace",
    "editor.tabSize": 2,
    "editor.wordBasedSuggestions": false,
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  // Formatter C#
  "[csharp]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp",
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.inlineSuggest.suppressSuggestions": false,
    "editor.maxTokenizationLineLength": 2500,
    "editor.rulers": [
      80
    ],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  // Formatter CSS
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.rulers": [
      80
    ],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  // Formatter HTML
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.rulers": [
      80
    ],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  // Formatter Java
  "[java]": {
    "editor.defaultFormatter": "xaver.clang-format",
    "editor.rulers": [
      80
    ],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  // Formatter Javascript
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.rulers": [
      80
    ],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  // Formatter React
  "[javascriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features",
    "editor.rulers": [
      80
    ],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  // Formatter Json
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.rulers": [
      120
    ],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 120
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.rulers": [
      120
    ],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 120
  },
  // Formatter Markdown
  "[markdown]": {
    "diffEditor.ignoreTrimWhitespace": false,
    "editor.defaultFormatter": "yzhang.markdown-all-in-one",
    "editor.quickSuggestions": {
      "comments": "off",
      "other": "off",
      "strings": "off"
    },
    "editor.rulers": [
      80
    ],
    "editor.unicodeHighlight.ambiguousCharacters": false,
    "editor.unicodeHighlight.invisibleCharacters": false,
    "editor.wordWrap": "on",
    "editor.wordWrapColumn": 80
  },
  // Formatter Python
  "[python]": {
    "diffEditor.ignoreTrimWhitespace": false,
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.tabSize": 4,
    "editor.wordBasedSuggestions": false,
    "editor.wordWrapColumn": 80
  },
  // Formatter Rust
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.inlayHints.enabled": "offUnlessPressed",
    "editor.rulers": [
      80
    ],
    "editor.tabSize": 4,
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  // Formatter SCSS
  "[scss]": {
    "editor.defaultFormatter": "sibiraj-s.vscode-scss-formatter",
    "editor.rulers": [
      80
    ],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  // Formatter Typescript
  "[typescript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.rulers": [
      80
    ],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.rulers": [
      80
    ],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  // Formatter XML
  "[xml]": {
    "editor.defaultFormatter": "redhat.vscode-xml",
    "editor.rulers": [
      80
    ],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80
  },
  // Spring boot
  "boot-java.rewrite.reconcile": true,
  // Workbench
  "breadcrumbs.enabled": false,
  "cmake.configureOnOpen": true,
  // C / CXX
  // C#
  "csharp.format.enable": true,
  "csharp.inlayHints.enableInlayHintsForImplicitObjectCreation": true,
  "csharp.inlayHints.enableInlayHintsForImplicitVariableTypes": true,
  "csharp.inlayHints.enableInlayHintsForLambdaParameterTypes": true,
  "csharp.inlayHints.enableInlayHintsForTypes": true,
  "csharp.referencesCodeLens.enabled": true,
  "csharp.semanticHighlighting.enabled": true,
  "csharp.testsCodeLens.enabled": true,
  // CSS
  "css.completion.completePropertyWithSemicolon": true,
  "css.completion.triggerPropertyValueCompletion": true,
  "css.format.braceStyle": "collapse",
  "css.format.enable": true,
  "css.format.maxPreserveNewLines": 1,
  "css.format.newlineBetweenRules": false,
  "css.format.newlineBetweenSelectors": true,
  "css.format.preserveNewLines": false,
  "css.format.spaceAroundSelectorSeparator": true,
  "css.hover.documentation": true,
  "css.hover.references": true,
  "css.lint.argumentsInColorFunction": "error",
  "css.lint.boxModel": "ignore",
  "css.lint.compatibleVendorPrefixes": "error",
  "css.lint.duplicateProperties": "ignore",
  "css.lint.emptyRules": "ignore",
  "css.lint.float": "error",
  "css.lint.fontFaceProperties": "error",
  "css.lint.hexColorLength": "error",
  "css.lint.idSelector": "ignore",
  "css.lint.ieHack": "error",
  "css.lint.importStatement": "error",
  "css.lint.important": "error",
  "css.lint.propertyIgnoredDueToDisplay": "error",
  "css.lint.universalSelector": "ignore",
  "css.lint.unknownAtRules": "ignore",
  "css.lint.unknownProperties": "ignore",
  "css.lint.unknownVendorSpecificProperties": "ignore",
  "css.lint.vendorPrefix": "error",
  "css.lint.zeroUnits": "error",
  "css.validate": true,
  // Debug
  "debug.allowBreakpointsEverywhere": true,
  // Dotnet
  "dotnet.autoDetect": "on",
  "dotnet.completion.provideRegexCompletions": true,
  "dotnet.completion.showCompletionItemsFromUnimportedNamespaces": true,
  "dotnet.completion.showNameCompletionSuggestions": true,
  "dotnet.defaultSolution": "disabled",
  "dotnet.highlighting.highlightRelatedJsonComponents": true,
  "dotnet.highlighting.highlightRelatedRegexComponents": true,
  "dotnet.implementType.insertionBehavior": "atTheEnd",
  "dotnet.implementType.propertyGenerationBehavior": "preferAutoProperties",
  "dotnet.inlayHints.enableInlayHintsForIndexerParameters": true,
  "dotnet.inlayHints.enableInlayHintsForLiteralParameters": true,
  "dotnet.inlayHints.enableInlayHintsForObjectCreationParameters": true,
  "dotnet.inlayHints.enableInlayHintsForOtherParameters": true,
  "dotnet.inlayHints.enableInlayHintsForParameters": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent": true,
  "dotnet.navigation.navigateToDecompiledSources": true,
  "dotnetAcquisitionExtension.enableTelemetry": true,
  // Editor
  "editor.codeActionsOnSave": {
    "source.fixAll": false,
    "source.fixAll.eslint": true,
    "source.fixAll.sortJSON": true,
    "source.fixAll.stylelint": true
  },
  "editor.colorDecorators": false,
  "editor.detectIndentation": false,
  "editor.fontFamily": "'Fira Code', 'Droid Sans Mono', 'monospace', monospace",
  "editor.fontLigatures": true,
  "editor.fontSize": 22,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.insertSpaces": true,
  "editor.minimap.enabled": false,
  "editor.renderControlCharacters": true,
  "editor.renderWhitespace": "all",
  "editor.tabSize": 2,
  "editor.trimAutoWhitespace": false,
  // Emmet
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "markdown": "html",
    "typescript": "typescriptreact",
    "vue-html": "html"
  },
  "emmet.triggerExpansionOnTab": true,
  "eslint.codeActionsOnSave.mode": "all",
  // Javascript / Typescript
  "eslint.enable": true,
  "eslint.format.enable": true,
  "eslint.timeBudget.onFixes": {
    "error": 6000,
    "warn": 3000
  },
  "eslint.timeBudget.onValidation": {
    "error": 8000,
    "warn": 4000
  },
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  // Explorer
  "explorer.compactFolders": false,
  // Files
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  // Git
  "git.openRepositoryInParentFolders": "never",
  // HTML
  "html.autoClosingTags": true,
  "html.autoCreateQuotes": true,
  "html.completion.attributeDefaultValue": "doublequotes",
  "html.format.contentUnformatted": "",
  "html.format.enable": true,
  "html.format.extraLiners": "",
  "html.format.indentHandlebars": true,
  "html.format.indentInnerHtml": true,
  "html.format.maxPreserveNewLines": null,
  "html.format.preserveNewLines": true,
  "html.format.templating": true,
  "html.format.unformatted": "",
  "html.format.unformattedContentDelimiter": "",
  "html.format.wrapAttributes": "aligned-multiple",
  "html.format.wrapAttributesIndentSize": 2,
  "html.format.wrapLineLength": 80,
  "html.hover.documentation": true,
  "html.hover.references": true,
  "html.suggest.html5": true,
  "html.validate.scripts": true,
  "html.validate.styles": true,
  // Proxy
  "http.proxyAuthorization": null,
  "http.proxyStrictSSL": false,
  // Java
  "java.autobuild.enabled": true,
  "java.codeAction.sortMembers.avoidVolatileChanges": true,
  "java.codeGeneration.generateComments": false,
  "java.codeGeneration.hashCodeEquals.useInstanceof": false,
  "java.codeGeneration.hashCodeEquals.useJava7Objects": false,
  "java.codeGeneration.insertionLocation": "afterCursor",
  "java.codeGeneration.toString.codeStyle": "STRING_BUILDER_CHAINED",
  "java.codeGeneration.toString.limitElements": 0,
  "java.codeGeneration.toString.listArrayContents": true,
  "java.codeGeneration.toString.skipNullValues": false,
  "java.codeGeneration.toString.template": "${object.className} [${member.name()}=${member.value}, ${otherMembers}]",
  "java.codeGeneration.useBlocks": false,
  "java.compile.nullAnalysis.mode": "automatic",
  "java.compile.nullAnalysis.nonnull": [
    "javax.annotation.Nonnull",
    "org.eclipse.jdt.annotation.NonNull",
    "org.springframework.lang.NonNull"
  ],
  "java.compile.nullAnalysis.nullable": [
    "javax.annotation.Nullable",
    "org.eclipse.jdt.annotation.Nullable",
    "org.springframework.lang.Nullable"
  ],
  "java.completion.enabled": true,
  "java.completion.favoriteStaticMembers": [
    "org.junit.Assert.*",
    "org.junit.Assume.*",
    "org.junit.jupiter.api.Assertions.*",
    "org.junit.jupiter.api.Assumptions.*",
    "org.junit.jupiter.api.DynamicContainer.*",
    "org.junit.jupiter.api.DynamicTest.*",
    "org.mockito.Mockito.*",
    "org.mockito.ArgumentMatchers.*",
    "org.mockito.Answers.*"
  ],
  "java.completion.filteredTypes": [
    "java.awt.*",
    "com.sun.*",
    "sun.*",
    "jdk.*",
    "org.graalvm.*",
    "io.micrometer.shaded.*"
  ],
  "java.completion.guessMethodArguments": true,
  "java.completion.importOrder": [
    "#",
    "java",
    "javax",
    "org",
    "com",
    ""
  ],
  "java.completion.lazyResolveTextEdit.enabled": true,
  "java.completion.matchCase": "auto",
  "java.completion.maxResults": 0,
  "java.completion.postfix.enabled": true,
  "java.configuration.updateBuildConfiguration": "automatic",
  "java.debug.logLevel": "error",
  "java.debug.settings.console": "integratedTerminal",
  "java.debug.settings.enableRunDebugCodeLens": true,
  "java.debug.settings.exceptionBreakpoint.allowClasses": [ ],
  "java.debug.settings.exceptionBreakpoint.exceptionTypes": [ ],
  "java.debug.settings.exceptionBreakpoint.skipClasses": [ ],
  "java.debug.settings.forceBuildBeforeLaunch": true,
  "java.debug.settings.hotCodeReplace": "auto",
  "java.debug.settings.maxStringLength": 0,
  "java.debug.settings.numericPrecision": 0,
  "java.debug.settings.showHex": false,
  "java.debug.settings.showLogicalStructure": true,
  "java.debug.settings.showQualifiedNames": false,
  "java.debug.settings.showStaticVariables": false,
  "java.debug.settings.showToString": true,
  "java.dependency.autoRefresh": true,
  "java.dependency.packagePresentation": "flat",
  "java.dependency.refreshDelay": 2000,
  "java.dependency.showMembers": false,
  "java.dependency.syncWithFolderExplorer": true,
  "java.eclipse.downloadSources": false,
  "java.format.comments.enabled": true,
  "java.format.enabled": true,
  "java.format.onType.enabled": true,
  "java.implementationsCodeLens.enabled": false,
  "java.import.gradle.java.home": "/usr/lib/jvm/default",
  "java.import.gradle.wrapper.enabled": true,
  "java.inlayHints.parameterNames.enabled": "none",
  "java.inlayHints.parameterNames.exclusions": [ ],
  "java.jdt.ls.java.home": "/usr/lib/jvm/default",
  "java.jdt.ls.lombokSupport.enabled": true,
  "java.maven.downloadSources": true,
  "java.maven.updateSnapshots": true,
  "java.project.encoding": "setDefault",
  "java.recommendations.dependency.analytics.show": true,
  "java.referencesCodeLens.enabled": false,
  "java.saveActions.organizeImports": false,
  "java.signatureHelp.description.enabled": false,
  "java.signatureHelp.enabled": true,
  "java.sources.organizeImports.starThreshold": 99,
  "java.sources.organizeImports.staticStarThreshold": 99,
  "java.templates.fileHeader": [ ],
  "java.templates.typeComment": [ ],
  "java.typeHierarchy.lazyLoad": false,
  // Javascript
  "javascript.autoClosingTags": true,
  "javascript.format.enable": true,
  "javascript.format.insertSpaceAfterCommaDelimiter": true,
  "javascript.format.insertSpaceAfterConstructor": false,
  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
  "javascript.format.insertSpaceAfterSemicolonInForStatements": true,
  "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
  "javascript.format.insertSpaceBeforeFunctionParenthesis": false,
  "javascript.format.placeOpenBraceOnNewLineForControlBlocks": false,
  "javascript.format.placeOpenBraceOnNewLineForFunctions": false,
  "javascript.format.semicolons": "insert",
  "javascript.preferences.quoteStyle": "double",
  "javascript.suggest.autoImports": true,
  "javascript.suggest.classMemberSnippets.enabled": true,
  "javascript.suggest.completeFunctionCalls": true,
  "javascript.suggest.completeJSDocs": true,
  "javascript.suggest.enabled": true,
  "javascript.suggest.includeAutomaticOptionalChainCompletions": true,
  "javascript.suggest.includeCompletionsForImportStatements": true,
  "javascript.suggest.jsdoc.generateReturns": true,
  "javascript.suggest.names": true,
  "javascript.suggest.paths": true,
  "javascript.suggestionActions.enabled": false,
  "javascript.updateImportsOnFileMove.enabled": "never",
  "javascript.validate.enable": true,
  "json.format.enable": true,
  // Json
  "json.format.keepLines": true,
  "json.schemaDownload.enable": true,
  "json.validate.enable": true,
  // Jupyter
  "jupyter.debugJustMyCode": true,
  // Leetcode
  "leetcode.colorizeProblems": true,
  "leetcode.defaultLanguage": "python3",
  "leetcode.editor.shortcuts": [
    "description",
    "solution",
    "star",
    "submit",
    "test"
  ],
  "leetcode.filePath": {
    "c": {
      "filename": "main.${ext}",
      "folder": "./src/${snake_case_name}"
    },
    "cpp": {
      "filename": "main.cxx",
      "folder": "./src/${snake_case_name}"
    },
    "default": {
      "filename": "${kebab-case-name}.${ext}",
      "folder": "./src/${snake_case_name}"
    },
    "python3": {
      "filename": "${snake_case_name}.${ext}",
      "folder": "./src/${snake_case_name}"
    },
    "rust": {
      "filename": "mod.${ext}",
      "folder": "./src/solution/${snake_case_name}"
    }
  },
  "leetcode.hideSolved": false,
  "leetcode.hint.commandShortcut": false,
  "leetcode.hint.commentDescription": false,
  "leetcode.hint.configWebviewMarkdown": false,
  "leetcode.hint.setDefaultLanguage": true,
  "leetcode.problems.sortStrategy": "Acceptance Rate (Descending)",
  "leetcode.showDescription": "In Webview",
  "leetcode.showLocked": false,
  "leetcode.workspaceFolder": "/home/metrikspacex/.workspace/leetcode",
  "notebook.breadcrumbs.showCodeCells": false,
  // Notebook / Jupyter
  "notebook.cellToolbarLocation": {
    "default": "hidden"
  },
  "notebook.compactView": true,
  "notebook.formatOnSave.enabled": true,
  "notebook.globalToolbar": true,
  "notebook.lineNumbers": "on",
  "notebook.showCellStatusBar": "hidden",
  "omnisharp.useModernNet": false,
  // Paths
  "path-intellisense.absolutePathToWorkspace": true,
  // Prettier
  "prettier.arrowParens": "always",
  "prettier.bracketSameLine": true,
  "prettier.bracketSpacing": true,
  "prettier.enable": true,
  "prettier.endOfLine": "lf",
  "prettier.htmlWhitespaceSensitivity": "css",
  "prettier.jsxSingleQuote": false,
  "prettier.printWidth": 80,
  "prettier.proseWrap": "always",
  "prettier.quoteProps": "as-needed",
  "prettier.semi": true,
  "prettier.singleAttributePerLine": false,
  "prettier.singleQuote": false,
  "prettier.tabWidth": 2,
  "prettier.trailingComma": "es5",
  "prettier.useTabs": false,
  // Python
  "python.analysis.autoFormatStrings": true,
  "python.analysis.autoImportCompletions": true,
  "python.analysis.completeFunctionParens": true,
  "python.analysis.importFormat": "absolute",
  "python.analysis.inlayHints.callArgumentNames": false,
  "python.analysis.inlayHints.functionReturnTypes": false,
  "python.analysis.inlayHints.pytestParameters": false,
  "python.analysis.inlayHints.variableTypes": false,
  "python.analysis.typeCheckingMode": "basic",
  "python.experiments.enabled": true,
  "python.formatting.blackPath": "black",
  "python.linting.enabled": true,
  "python.linting.flake8Enabled": true,
  "python.linting.lintOnSave": true,
  "python.linting.mypyEnabled": true,
  "python.testing.pytestEnabled": false,
  "python.testing.unittestEnabled": false,
  "pythonIndent.keepHangingBracketOnLine": true,
  "pythonIndent.trimLinesWithOnlyWhitespace": true,
  "pythonIndent.useTabOnHangingIndent": true,
  // SCSS
  "scss.completion.completePropertyWithSemicolon": true,
  "scss.completion.triggerPropertyValueCompletion": true,
  "scss.format.braceStyle": "collapse",
  "scss.format.enable": true,
  "scss.format.maxPreserveNewLines": 2,
  "scss.format.newlineBetweenRules": false,
  "scss.format.newlineBetweenSelectors": false,
  "scss.format.preserveNewLines": true,
  "scss.format.spaceAroundSelectorSeparator": true,
  "scss.hover.documentation": true,
  "scss.hover.references": true,
  "scss.lint.argumentsInColorFunction": "error",
  "scss.lint.boxModel": "ignore",
  "scss.lint.compatibleVendorPrefixes": "error",
  "scss.lint.duplicateProperties": "ignore",
  "scss.lint.emptyRules": "ignore",
  "scss.lint.float": "error",
  "scss.lint.fontFaceProperties": "error",
  "scss.lint.hexColorLength": "error",
  "scss.lint.idSelector": "ignore",
  "scss.lint.ieHack": "error",
  "scss.lint.importStatement": "ignore",
  "scss.lint.important": "ignore",
  "scss.lint.propertyIgnoredDueToDisplay": "error",
  "scss.lint.universalSelector": "ignore",
  "scss.lint.unknownAtRules": "ignore",
  "scss.lint.unknownProperties": "ignore",
  "scss.lint.unknownVendorSpecificProperties": "ignore",
  "scss.lint.vendorPrefix": "error",
  "scss.lint.zeroUnits": "error",
  "scss.validate": true,
  // Linting
  // CSS / SCSS
  "stylelint.config": {
    "overrides": [
      {
        "customSyntax": "postcss-scss",
        "defaultSeverity": "error",
        "extends": [
          "stylelint-config-standard-scss",
          "stylelint-scss"
        ],
        "files": [
          "*.css",
          "**/*.css",
          "*.scss",
          "**/*.scss"
        ],
        "reportDescriptionlessDisables": false,
        "reportInvalidScopeDisables": true,
        "reportNeedlessDisables": true,
        "rules": {
          "at-rule-empty-line-before": [
            "always",
            {
              "except": [
                "inside-block",
                "blockless-after-same-name-blockless",
                "blockless-after-blockless",
                "first-nested"
              ],
              "ignore": [
                "after-comment",
                "inside-block",
                "blockless-after-same-name-blockless",
                "blockless-after-blockless"
              ]
            }
          ],
          "at-rule-name-newline-after": "always-multi-line",
          "at-rule-no-unknown": null,
          "at-rule-no-vendor-prefix": true,
          "at-rule-semicolon-space-before": "never",
          "block-no-empty": null,
          "color-named": null,
          "color-no-hex": null,
          "declaration-block-no-redundant-longhand-properties": null,
          "declaration-block-trailing-semicolon": null,
          "declaration-no-important": true,
          "font-family-name-quotes": "always-where-required",
          "font-family-no-missing-generic-family-keyword": null,
          "font-weight-notation": null,
          "function-parentheses-newline-inside": "never-multi-line",
          "function-parentheses-space-inside": "never",
          "function-url-no-scheme-relative": true,
          "function-url-quotes": "always",
          "max-line-length": [
            140,
            {
              "ignore": "non-comments"
            }
          ],
          "max-nesting-depth": [
            4,
            {
              "ignore": [
                "blockless-at-rules"
              ]
            }
          ],
          "media-feature-name-no-vendor-prefix": true,
          "no-descending-specificity": null,
          "no-duplicate-selectors": true,
          "no-empty-source": null,
          "no-unknown-animations": true,
          "number-max-precision": 3,
          "property-no-unknown": [
            true,
            {
              "ignoreProperties": [
                "/^lost-/"
              ]
            }
          ],
          "property-no-vendor-prefix": true,
          "rule-empty-line-before": [
            "always",
            {
              "except": [
                "after-single-line-comment",
                "inside-block-and-after-rule",
                "first-nested"
              ],
              "ignore": [
                "after-comment",
                "inside-block"
              ]
            }
          ],
          "scss/at-rule-no-unknown": null,
          "selector-attribute-quotes": "always",
          "selector-class-pattern": null,
          "selector-max-class": 4,
          "selector-max-combinators": 4,
          "selector-max-compound-selectors": 4,
          "selector-max-specificity": null,
          "selector-max-type": [
            4,
            {
              "ignore": [
                "child",
                "compounded",
                "descendant"
              ]
            }
          ],
          "selector-max-universal": 4,
          "selector-no-qualifying-type": null,
          "selector-no-vendor-prefix": true,
          "selector-type-no-unknown": null,
          "string-quotes": "double",
          "time-min-milliseconds": 100,
          "unit-disallowed-list": [ ],
          "value-keyword-case": "lower",
          "value-no-vendor-prefix": true
        }
      }
    ]
  },
  "stylelint.configFile": ".stylelintrc.json",
  "stylelint.customSyntax": "postcss-scss",
  "stylelint.enable": true,
  "stylelint.validate": [
    "css",
    "scss"
  ],
  "tabnine.experimentalAutoImports": true,
  "terminal.integrated.inheritEnv": false,
  // Typescript
  "typescript.autoClosingTags": true,
  "typescript.enablePromptUseWorkspaceTsdk": false,
  "typescript.format.enable": true,
  "typescript.format.insertSpaceAfterCommaDelimiter": true,
  "typescript.format.insertSpaceAfterConstructor": false,
  "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
  "typescript.format.insertSpaceAfterSemicolonInForStatements": true,
  "typescript.format.insertSpaceAfterTypeAssertion": false,
  "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
  "typescript.format.insertSpaceBeforeFunctionParenthesis": false,
  "typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,
  "typescript.format.placeOpenBraceOnNewLineForFunctions": false,
  "typescript.format.semicolons": "insert",
  "typescript.preferences.quoteStyle": "double",
  "typescript.suggest.autoImports": true,
  "typescript.suggest.classMemberSnippets.enabled": true,
  "typescript.suggest.completeFunctionCalls": true,
  "typescript.suggest.completeJSDocs": true,
  "typescript.suggest.enabled": true,
  "typescript.suggest.includeAutomaticOptionalChainCompletions": true,
  "typescript.suggest.includeCompletionsForImportStatements": true,
  "typescript.suggest.jsdoc.generateReturns": true,
  "typescript.suggest.objectLiteralMethodSnippets.enabled": true,
  "typescript.suggest.paths": true,
  "typescript.suggestionActions.enabled": true,
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.validate.enable": true,
  "workbench.iconTheme": "vscode-icons",
  "workbench.startupEditor": "none",
  // XML
  "xml.completion.autoCloseTags": true,
  "xml.format.enabled": true,
  "xml.format.enforceQuoteStyle": "preferred",
  "xml.format.joinCDATALines": false,
  "xml.format.joinCommentLines": false,
  "xml.format.maxLineWidth": 80,
  "xml.format.preserveAttributeLineBreaks": false,
  "xml.format.preserveSpace": [
    "xsl:text",
    "xsl:comment",
    "xsl:processing-instruction",
    "literallayout",
    "programlisting",
    "screen",
    "synopsis",
    "pre",
    "xd:pre"
  ],
  "xml.format.preservedNewlines": 0,
  "xml.format.splitAttributes": true,
  "xml.format.splitAttributesIndentSize": 2,
  "xml.format.xsiSchemaLocationSplit": "onElement",
  "xml.preferences.quoteStyle": "double"
}
